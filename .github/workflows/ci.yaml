name: Build and Push SSR Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Set up OpenMP and MPI dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          python3-pip

      - name: Install Namespaxe
        run: |
          pip3 install namespaxe

      - name: Install dependencies
        run: |
          for i in {1..5}; do
            npm install --legacy-peer-deps && break || sleep 15;
          done

      - name: Build static project
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.D_USERNAME }}
          password: ${{ secrets.D_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ secrets.D_USERNAME }}/logger:2.6
          push: true

      - name: Namespaxe login
        env:
          NAMESPAXE_USERNAME: ${{ secrets.NAMESPAXE_USERNAME }}
          NAMESPAXE_PASSWORD: ${{ secrets.NAMESPAXE_PASSWORD }}
        run: |
          namespaxe login --username "${{ secrets.NAMESPAXE_USERNAME }}" --password "${{ secrets.NAMESPAXE_PASSWORD }}"

      - name: Get the first namespace
        id: fetch_namespace
        run: |
          response=$(namespaxe list ns --clean)
          namespace=$(echo $response | jq -r '.data[0].ns_name')
          echo "namespace=$namespace" >> $GITHUB_ENV

      - name: Install Kubernetes configuration
        run: |
          namespaxe install-k8s-config ns ${{ env.namespace }}

      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Deploy the app to Kubernetes
        run: |
          kubectl delete -f k8s/deployment.yaml
          kubectl delete -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
